apply plugin: 'com.android.library'
apply plugin: 'maven'

def MAVEN_LOCAL_PATH = 'http://172.21.16.247:8081/nexus/content/repositories/XgimiApi'
def ARTIFACT_ID = 'sdk'
def VERSION_NAME = '1.0.1'
def GROUP_ID = 'com.xgimi.lint'
def ACCOUNT = 'admin'
def PASSWORD = 'admin123'

//脚本：将Lib打成aar包上传至maven私有库
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_LOCAL_PATH) {
                authentication(userName: ACCOUNT, password: PASSWORD)
            }
            pom.project {
                groupId GROUP_ID
                artifactId ARTIFACT_ID
                version VERSION_NAME
                packaging 'aar'
            }
        }
    }
}


android {
    compileSdkVersion 27



    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
        maven { url 'http://172.21.16.247:8081/nexus/content/repositories/XgimiApi' }
    }

}


dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api 'com.android.tools.lint:lint-api:26.1.3'
    api 'com.android.tools.lint:lint-checks:26.1.3'
    api files('libs/lintlib.jar')
}


/*
 lint相关
 */
// 依赖所有jar结尾的jar包
//dependencies {
//    api fileTree(dir: 'libs', include: ['*.jar'])
//}
// 定义方法lintJarImport
configurations {
    lintJarImport
}

// 链接到lintJar中的lintJarOutput方法,调用jar方法，并获得jar包
dependencies {
    lintJarImport project(path: ':lintlib', configuration: 'lintJarOutput')
}

// 将得到的JAR包复制到目录build/intermediates/lint/下
task copyLintJar(type: Copy) {
    from (configurations.lintJarImport) {
        rename {
            String fileName ->
                'lintlib.jar'
        }
    }
    into 'build/intermediates/lint/'
}
// 当项目build到compileLint这一步时执行copyLintJar方法
project.afterEvaluate {
    def compileLintTask = project.tasks.find{ it.name == 'compileLint'}
    compileLintTask.dependsOn(copyLintJar)
}
